#!/bin/sh
### BEGIN INIT INFO
# Provides:		redis-server
# Required-Start:	$syslog $remote_fs
# Required-Stop:	$syslog $remote_fs
# Should-Start:		$local_fs
# Should-Stop:		$local_fs
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	redis-server - Persistent key-value db
# Description:		redis-server - Persistent key-value db
### END INIT INFO


PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/redis-server
DAEMON_ARGS=/etc/redis/redis.conf
NAME=redis-server
DESC=redis-server
CONFDIR=/etc/redis/
USER=redis

RUNDIR=/var/run/redis
PIDFILE=$RUNDIR/redis-server.pid

test -x $DAEMON || exit 0

if [ -r /etc/default/$NAME ]
then
	. /etc/default/$NAME
fi

. /lib/lsb/init-functions


if [ -f "${CONFDIR}$1.conf" ] ; then

 PIDFILE=$RUNDIR/$1.pid
 DAEMON_ARGS=$CONFDIR$1.conf
 NAME=$1
 if [ "$1" = "sentinel" ] ; then
  DAEMON=/usr/bin/redis-sentinel
 fi

 toDo=$2
else
 for conf in $(ls -1 ${CONFDIR}*.conf |  sed 's@/etc/redis/\(.*\)\.conf@\1@') ; do #'
  $0 ${conf} $1
 done
 exit 0;
fi

test -n "$ULIMIT" || ULIMIT=10922

set -e

case "$toDo" in
  start)
	mkdir -p $RUNDIR
	touch $PIDFILE
	chown ${USER}: $RUNDIR $PIDFILE
	chmod 755 $RUNDIR

	ulimit -n $ULIMIT
	if status_of_proc -p ${PIDFILE} ${DAEMON} "${NAME}" >/dev/null ; then
	 echo " [ fail ] server $NAME already running! "
	 exit 4
	fi
	
	echo -n "Starting $DESC: "
	su -s /bin/sh -c "$DAEMON $DAEMON_ARGS" $USER
	echo "$NAME."
	;;
  stop)
	echo -n "Stopping $DESC: "
	if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON
	then
		echo "$NAME."
	else
		echo "failed"
	fi
	rm -f $PIDFILE
	sleep 1
	;;

  restart|force-reload)
	${0} stop
	${0} start
	;;

  status)
	status_of_proc -p ${PIDFILE} ${DAEMON} "${NAME}"
	;;

  bgsave)
	if [ "$1" = "sentinel" ] ; then exit ; fi

	if ! grep save\  ${CONFDIR}$NAME.conf | grep -v \# -q ; then 
	 echo "$(date) [ info ] $NAME dont use rdb file"
	 exit 0
	fi

	if ! status_of_proc -p ${PIDFILE} ${DAEMON} "${NAME}" >/dev/null ; then
	 echo "$(date) [ error ] server $NAME not running! "
	 exit 3
	fi
	

	Port=`grep "port" ${CONFDIR}$NAME.conf | grep -v \# | sed 's/port*\W\(*[0-9]\)*/\1/'`

	startTime=`date +"%s"`
	redis-cli -p $Port BGSAVE >/dev/null &&\
	echo -n "$(date) [ OK ] start saving $NAME.rdb file and waiting .."
	sleep 1;

	max=600; count=1
	while (redis-cli -p $Port info | grep -q rdb_bgsave_in_progress:1) && [ ${max} -gt ${count} ] ; do sleep 1s; count=$(($count+1)); done
	
	echo ".. done in" $((`date +"%s"`-${startTime})) "s";
	;;

  *)
	echo "Usage: /etc/init.d/redis-server $NAME {start|stop|restart|force-reload|status|bgsave}" >&2
	exit 1
	;;
esac

exit 0
